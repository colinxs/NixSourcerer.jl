name: Test
on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.cache/nix
            ~/.julia/artifacts
          key: ${{ runner.os }}-${{ hashFiles('nix-home/**/flake.lock','nix-home/**/NixManifest.nix') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('nix-home/**/NixManifest.nix') }}
            ${{ runner.os }}-${{ hashFiles('nix-home/**/flake.lock') }}
            ${{ runner.os }}-

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          extra_nix_config: |
            cores = 0
            max-jobs = auto
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.PAT }}
     

      - name: Restore Nix Store
        run: |
          ls -la ~/.cache/nix
          if [[ -e "$HOME/.cache/nix/store" ]]; then rsync -aHAXv --exclude "$HOME/.cache/nix/store/" /nix/store; fi
      
      - name: Install nixUnstable
        run: |
          nix-env -iA nixUnstable -f '<nixpkgs>'
          echo "${HOME}/.nix-profile/bin" >> $GITHUB_PATH
      
      - uses: cachix/cachix-action@v10
        with:
          name: colinxs 
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
      
      # - name: Run Test
      #   run: nix run .#run-test 

      - name: Copy Nix Store
        run: rsync -aHAXv --delete --exclude '*.lock' /nix/store/  "$HOME/.cache/nix/store"

